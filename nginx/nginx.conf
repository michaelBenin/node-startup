# https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf
# https://rtcamp.com/tutorials/nginx/optimization/
# http://stackoverflow.com/questions/7325211/tuning-nginx-worker-process-to-obtain-100k-hits-per-min
# https://keymetrics.io/2014/06/17/high-performance-server-configuration-with-ubuntunginxpm2/
# https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
# https://blog.pkhamre.com/logging-to-logstash-json-format-in-nginx/
# http://www.cyberciti.biz/faq/nginx-ipv6-configuration/
# https://github.com/h5bp/server-configs-nginx/tree/master/h5bp
# Notes also from Mastering NGINX 2013 - Dimitri Aivaliotis (Michael Benin)
# Syntax highlighting: https://plugins.jetbrains.com/plugin/4415?pr=
# If you make changes to this file test it: sudo nginx -t -c <path to ngonx.conf>
# graceful shut down command: sudo kill -QUIT $( cat /var/run/nginx.pid )
# startup command: sudo nginx -c <path to configuration>

# User and group under which the worker processes run
user ubuntu;

# Configure location for process id
pid /var/run/nginx.pid;

# controls number of worker processes Nginx is running
worker_processes auto;

# number of filehandles for worker_processes
worker_rlimit_nofile 100000;

# connection-processing directives
events {
  # simultaneous connections available - product of this number and the number of worker_processes
  worker_connections 10240;
}

# (this is only used when you don't override error_log on a server{} level)
# this directory must exist
error_log  /var/log/nginx_error.log;

http {
  # nginx's default max length is 32 (fix for long domain names)
  server_names_hash_bucket_size 128;

  # Disables sending the NGINX version string in error messages/Server response header
  server_tokens off;

  # Configure location where mime.types, see the mime.types
  # https://raw.githubusercontent.com/h5bp/server-configs-nginx/master/mime.types
  include /etc/nginx/mime.types;

  # Update charset_types due to updated mime.types
    charset_types text/xml text/plain text/vnd.wap.wml application/x-javascript application/rss+xml text/css application/javascript application/json;

  # default mime type
  default_type application/octet-stream;

  # essential for serving static files
  # https://t37.net/nginx-optimization-understanding-sendfile-tcp_nodelay-and-tcp_nopush.html
  sendfile on;

  # must be activated with sendfile, optimizes amount of data sent at once
  tcp_nopush on;

  # send the data as soon as itâ€™s available
  tcp_nodelay on;

  # enable Gzip compression
  gzip on;

  # shortcut for regex MSIE [4-6]\., excluding MSIE 6.0
  gzip_disable msie6;

  # The minimum HTTP version of a request before compression is considered.
  gzip_http_version 1.0;

  # 75% reduction for most ascii files (almost identical to level 9).
  gzip_comp_level 5;

  # don't compress anything that's already small and unlikely to shrink much if at all
  gzip_min_length 256;

  # compress data even for clients that are connecting to us via proxies
  gzip_proxied any;

  # tell proxies to cache both the gzipped and regular version of a resource
  gzip_vary on;

  # compress all output labeled with one of the following MIME-types
  gzip_types
    # text/html is included in the gzip list by default
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

    # prevent temporary files from being written to the disk
    client_body_buffer_size 10K;

    # specifying a buffer size for the client request header
    client_header_buffer_size 1k;

    # Defines the largest allowable client request body, before a 413 (Request Entity Too Large)
    client_max_body_size 8m;

    # Defines the maximum number and size of a large client request header
    large_client_header_buffers 2 1k;

    # length of time between two successive read operations of the client body before sending error
    client_body_timeout 12;

    #length of time for reading the entire client header. If reached, the client receives
    # a 408 error message (Request Timeout).
    client_header_timeout 12;

    # how long a keep-alive connection will stay open
    # note change this to 300 if using ssl
    keepalive_timeout 15;

    # Sets a timeout between two successive write operations for a client receiving a response.
    send_timeout 10;

    # Specifies which fields should appear in the log file and what format they should take
    # https://blog.pkhamre.com/logging-to-logstash-json-format-in-nginx/
    # configure endpoint with server name
    log_format logstash_json '{ "endpoint": "nginx_node_app", '
                          '"@timestamp": "$time_iso8601", '
                          '"@fields": { '
                          '"remote_addr": "$remote_addr", '
                          '"remote_user": "$remote_user", '
                          '"body_bytes_sent": "$body_bytes_sent", '
                          '"request_time": "$request_time", '
                          '"status": "$status", '
                          '"request": "$request", '
                          '"request_method": "$request_method", '
                          '"http_referrer": "$http_referer", '
                          '"http_user_agent": "$http_user_agent" } }';

    include /etc/nginx/sites-enabled/node-startup.conf;
}