# TODO: @MBENIN - Test this when we get ssl creds
# used for ssl - include to the server module

# 443, if HTTPS connections should also be made
listen 443 ssl;

# Indicates which SSL protocols should be enabled
# to support older browsers add SSLv3
ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;

# specifies the ciphers that should be supported in this virtual server context (OpenSSL format)
# Ciphers set to best allow protection from Beast, while providing forwarding secrecy, as defined by Mozilla (Intermediate Set) - https://wiki.mozilla.org/Security/Server_Side_TLS#Nginx
ssl_ciphers                ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;

# prefer the server's list of ciphers, so that we may determine security
ssl_prefer_server_ciphers on;

# SSL cache, and whether or not it should be shared among all worker processes
# a 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions
ssl_session_cache shared:SSL:10m;

# how long the client can use the same SSL parameters, provided they are stored in the cache
ssl_session_timeout 10m;

# TODO: get cert
# path to the PEM-encoded SSL certificate(s) for this virtual server.
ssl_certificate      /etc/nginx/default_ssl.crt;

# TODO: get key
# path to the PEM-encoded SSL secret key for this virtual server
ssl_certificate_key  /etc/nginx/default_ssl.key;

# This header tells browsers to cache the certificate for a year and to connect exclusively via HTTPS.
add_header Strict-Transport-Security "max-age=31536000;";

# Inform browser of SPDY availability, SPDY only works on HTTPS connections
add_header Alternate-Protocol  443:npn-spdy/3;

# Adjust connection keepalive for SPDY clients:
spdy_keepalive_timeout 300; # up from 180 secs default

# enable SPDY header compression
spdy_headers_comp 6;